{"version":3,"sources":["lib/squaredata.ts","lib/squares.ts","media/confetti.mp3","ui/Square.tsx","ui/Card.tsx","ui/App.tsx","reportWebVitals.ts","index.tsx"],"names":["squareData","title","getSquares","numSquares","amount","max","seq","Array","from","keys","arrayShuffle","splice","getRandomNums","length","map","id","Square","label","set","onClick","children","classes","classnames","className","confettiProps","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","colors","Star","viewBox","d","Card","squares","useState","fill","picks","setPicks","isWin","setIsWin","useEffect","hasWin","find","index","row","col","hasRow","slice","every","p","hasCol","filter","undefined","Audio","sfxConfetti","play","square","setId","config","active","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64b63285.chunk.js","sourcesContent":["const squareData = [\r\n  { title: \"Roy ‘Chubby’ Brown\" },\r\n  { title: \"Tantadrip Foundation\" },\r\n  { title: \"Non sequitur\" },\r\n  { title: \"Stockport\" },\r\n  { title: \"“___? I gatchu!”\" },\r\n  { title: \"King Cactus Cam\" },\r\n  { title: \"Soul laughs at accent\" },\r\n  { title: \"“Tantacrul is typing…”\" },\r\n  { title: \"*VC Renamed*\" },\r\n  { title: \"Water Ship down\" },\r\n  { title: \"Marz Cat Cam\" },\r\n  { title: \"SHIP’S CLOCK\" },\r\n  { title: \"Bad Pun\" },\r\n  { title: \"“Advanced”\" },\r\n  { title: \"Gilroy\" },\r\n  { title: \"Star Wars\" },\r\n  { title: \"P4rp server muted\" },\r\n  { title: \"Soul’s Twitter\" },\r\n  { title: \"Lara Dog Cam\" },\r\n  { title: \"Audacity Controversy\" },\r\n  { title: \"Tanta’s kids make him leave\" },\r\n  { title: \"Important Videos\" },\r\n  { title: \"Formula One\" },\r\n  { title: \"“What is (Item on bingo card)?”\" },\r\n  { title: \"Putin’s bitch\" },\r\n  { title: \"Tantakind\" },\r\n  { title: \"X af\" },\r\n  { title: \"“Fuck’s sake Soul”\" },\r\n  { title: \"Linus Boman\" },\r\n  { title: \"Bullying Americans\" },\r\n  { title: \"*Soul Draws*\" },\r\n  { title: \"Mourn Hall of Jank\" },\r\n  { title: \"“Hey it’s Tantacrul!”\" },\r\n  { title: \"Sudden Serious Topic\" },\r\n  { title: \"Simon\" },\r\n  { title: \"Calliopean club\" },\r\n  { title: \"Mop’s US Road trip\" },\r\n  { title: \"Ben Shapiro\" },\r\n  { title: \"Microsoft\" },\r\n  { title: \"Post Punk Podge\" },\r\n  { title: \"*Soul Wheeze*\" },\r\n  { title: \"Feldman’s Yeast\" },\r\n  { title: \"Politics\" },\r\n  { title: \"“You’re 12”\" },\r\n  { title: \"“X is getting worse!”\" },\r\n  { title: \"Fred_Durst.jpeg\" },\r\n  { title: \"Eurovision\" },\r\n  { title: \"Einaudi\" },\r\n  { title: \"“One at a time, please”\" },\r\n];\r\n\r\nexport default squareData;\r\n","import squareData from \"./squaredata\";\r\nimport arrayShuffle from \"array-shuffle\";\r\n\r\nexport type SquareDesc = {\r\n  title?: string;\r\n}\r\n\r\nconst getRandomNums = (amount: number, max: number) => {\r\n  const seq = Array.from(Array(max).keys());\r\n  return arrayShuffle(seq).splice(0, amount);\r\n};\r\n\r\nexport const getSquares = (numSquares: number) => {\r\n  return getRandomNums(numSquares, squareData.length).map(\r\n    (id) => squareData[id]\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/confetti.dc87da29.mp3\";","import classnames from \"classnames\";\r\nimport { PropsWithChildren } from \"react\";\r\n\r\nimport \"./Square.scss\";\r\n\r\ntype SquareProps = {\r\n  label?: string;\r\n  set?: boolean;\r\n  onClick?: () => void;\r\n};\r\n\r\nexport const Square = ({\r\n  label,\r\n  set,\r\n  onClick,\r\n  children,\r\n}: PropsWithChildren<SquareProps>) => {\r\n  const classes = classnames({\r\n    \"tb-square\": true,\r\n    \"tb-square--is-highlighted\": set,\r\n  });\r\n  return (\r\n    <div className={classes} onClick={onClick}>\r\n      <div className=\"tb-square__text\">{label || children}</div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport Confetti from \"react-dom-confetti\";\r\n\r\nimport { SquareDesc } from \"../lib/squares\";\r\nimport sfxConfetti from \"../media/confetti.mp3\";\r\nimport { Square } from \"./Square\";\r\n\r\nimport \"./Card.scss\";\r\n\r\ntype Props = {\r\n  squares: SquareDesc[];\r\n};\r\n\r\nconst confettiProps = {\r\n  angle: 90,\r\n  spread: 131,\r\n  startVelocity: 47,\r\n  elementCount: 87,\r\n  dragFriction: 0.21,\r\n  duration: 3200,\r\n  stagger: 0,\r\n  width: \"16px\",\r\n  height: \"10px\",\r\n  perspective: \"500px\",\r\n  colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"],\r\n};\r\n\r\nconst Star = () => (\r\n  <svg className=\"tb-star\" viewBox=\"0 0 128 128\">\r\n    <path\r\n      className=\"tb-star__glyph\"\r\n      d=\"M64 28L77.5849 45.302L98.238 52.8754L85.9808 71.142L85.1603 93.1246L64 87.112L42.8397 93.1246L42.0192 71.142L29.762 52.8754L50.4151 45.302L64 28Z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const Card = ({ squares }: Props) => {\r\n  const [picks, setPicks] = useState<Array<number>>(new Array(25).fill(0));\r\n  const [isWin, setIsWin] = useState(false);\r\n\r\n  const setSquare = (setId: number) => {\r\n    setPicks(\r\n      picks.map((square, id) => (id === setId ? (square + 1) % 2 : square))\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkRow = (row: number) => {\r\n      const r = picks.slice(row * 5, row * 5 + 5);\r\n      return r.every((p) => p === 1);\r\n    };\r\n\r\n    const checkCol = (col: number) => {\r\n      const c = picks.filter((p, id) => id % 5 === col);\r\n      return c.every((p) => p === 1);\r\n    };\r\n\r\n    const hasWin = Array.from(Array(5).keys()).find((index) => {\r\n      const hasRow = checkRow(index);\r\n      const hasCol = checkCol(index);\r\n      return hasRow || hasCol;\r\n    });\r\n    setIsWin(hasWin !== undefined);\r\n  }, [picks]);\r\n\r\n  useEffect(() => {\r\n    if (isWin === true) {\r\n      new Audio(sfxConfetti).play();\r\n    }\r\n  }, [isWin]);\r\n\r\n  return (\r\n    <div className=\"tb-playfield\">\r\n      <div className=\"tb-card\">\r\n        {squares.map((square, id) => {\r\n          return (\r\n            <Square\r\n              key={id}\r\n              set={picks[id] === 1}\r\n              onClick={() => setSquare(id)}\r\n            >\r\n              {id === 12 ? <Star /> : square.title}\r\n            </Square>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {isWin && <h1 className=\"tb-playfield__message\">Pro-Level Win</h1>}\r\n      <div className=\"tb-playfield__confetti\">\r\n        <Confetti config={confettiProps} active={isWin} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { getSquares } from \"../lib/squares\";\r\nimport { Card } from \"../ui/Card\";\r\n\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  const squares = getSquares(25);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"tb-upper\"></div>\r\n      <Card squares={squares} />\r\n      <div className=\"tb-lower\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}